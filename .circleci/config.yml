version: 2.1
orbs:
  aws-eks: circleci/aws-eks@2.2.0
  kubernetes: circleci/kubernetes@1.3
  aws-ecr: circleci/aws-ecr@8.1.2
jobs:
  linting-application-phase:
    docker:
      - image: python:3.7.3-stretch

    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            make install

      - run:
          name: run lint
          command: |
            . venv/bin/activate
            make lint

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

  upload-application-phase:
    docker:
      - image: circleci/golang:1.15
    working_directory: ~/repo
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "1a:62:b9:c8:c7:d9:a5:e5:f3:0c:72:00:e3:37:a3:3d"
      - setup_remote_docker:
          version: 19.03.13
      - run:
          name: Build docker container
          command: |
            docker build --tag=$DOCKER_IMAGE_NAME .
            docker image ls
      # login and upload docker image
      - run:
          name: Upload Docker to Dockerhub
          command: |
            docker login -u="$DOCKERHUB_USERNAME" -p="$DOCKERHUB_PASSWORD"
            docker tag $DOCKER_IMAGE_NAME $DOCKERHUB_USERNAME/$DOCKER_IMAGE_NAME:latest
            docker push $DOCKERHUB_USERNAME/$DOCKER_IMAGE_NAME:latest

  deploy-application-phase:
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "1a:62:b9:c8:c7:d9:a5:e5:f3:0c:72:00:e3:37:a3:3d"

      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: $ENVIRONMENT_NAME-app-project
          install-kubectl: true
          aws-region: $AWS_DEFAULT_REGION

      - kubernetes/create-or-update-resource:
          resource-file-path: "deployment.yml"
          get-rollout-status: true
          resource-name: deployment/capstone

      - kubernetes/create-or-update-resource:
          resource-file-path: "deployment.yml"

  expose-application-phase:
      docker:
      - image: cimg/python:3.10
      steps:
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: $ENVIRONMENT_NAME-app-project
          install-kubectl: true
          aws-region: $AWS_DEFAULT_REGION

      - run:
          name: Expose application
          command: |
            kubectl get pods
            kubectl get services

workflows:
  capstone-project-workflows:
    jobs:
      - linting-application-phase
      - upload-application-phase:
          requires:
            - linting-application-phase
          filters:
            branches:
              only: [ master ]
      - aws-ecr/build-and-push-image:
          name: build-ecr
          registry-id: AWS_ECR_REGISTRY_ID
          region: ${AWS_DEFAULT_REGION}
          repo: capstone_app
          tag: v1.0
          requires:
            [upload-docker]
      - aws-eks/create-cluster:
          cluster-name: $ENVIRONMENT_NAME-app-project
          aws-region: $AWS_DEFAULT_REGION
          requires:
            - build-ecr
      - deploy-application-phase:
          filters:
            branches:
              only: [ master ]
          requires:
            - upload-application-phase
      - expose-application-phase:
          requires:
            - deploy-application-phase

