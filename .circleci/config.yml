version: 2.1
Parameters:
  DockerPath:
    Description: a Docker Path
    Default: project4udacity/capstone-app
    Type: String

jobs:
  test-build:
    docker:
      - image: python:3.7.3-stretch

    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      # run build
      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            make install

      # run lint
      - run:
          name: run lint
          command: |
            . venv/bin/activate
            make lint

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

  upload-docker:
    docker:
      - image: circleci/golang:1.15

    working_directory: ~/repo

    steps:
      - checkout

      - setup_remote_docker:
          version: 19.03.13

      - run:
          name: Build docker container
          command: |
            docker build --tag=$DOCKER_IMAGE_NAME .
            docker image ls

      - run:
          name: Upload Docker to Dockerhub
          command: |
            docker login -u="$DOCKERHUB_USERNAME" -p="$DOCKERHUB_PASSWORD"
            docker tag $DOCKER_IMAGE_NAME $DOCKERHUB_USERNAME/$DOCKER_IMAGE_NAME:$CIRCLE_WORKFLOW_ID
            docker push $DOCKERHUB_USERNAME/$DOCKER_IMAGE_NAME:$CIRCLE_WORKFLOW_ID

  deploy-docker:
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout
      - run:
          name: Install awscli and gettext-base
          command: |
            sudo pip3 install awscli
            sudo apt-get install gettext-base
      - run:
          name: Install aws-iam-authenticator
          command: |
            curl -o aws-iam-authenticator curl -o aws-iam-authenticator https://amazon-eks.s3-us-west-2.amazonaws.com/1.13.7/2019-06-11/bin/linux/amd64/aws-iam-authenticator
            chmod +x ./aws-iam-authenticator
            sudo mv ./aws-iam-authenticator /usr/local/bin/aws-iam-authenticator
      - run:
          name: Install kubectl
          command: |
            curl -o kubectl https://amazon-eks.s3-us-west-2.amazonaws.com/1.13.7/2019-06-11/bin/linux/amd64/kubectl
            chmod +x ./kubectl
            sudo mv ./kubectl /usr/local/bin/kubectl
      - run:
          name: Create cluster
          command: |
            curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
            # sudo mv /tmp/eksctl /usr/local/bin
            eksctl create cluster -f ~/cluster.yaml
      - run:
          name: Connect to cluster
          command: |
            aws eks --region $AWS_DEFAULT_REGION update-kubeconfig --name $CLUSTER_NAME
      - run:
          name: Prepare K8S template
          command: |
            rm -rf .k8s/.generated && mkdir -p kube/.k8s/.generated
            for f in kube/.k8s/template/deployment.yaml
              do
              envsubst < $f > "kube/.k8s/.generated/$(basename $f)"
            done
      - run:
          name: Deploy
          command: |
            kubectl apply -f kube/.k8s/.generated/
            kubectl get pod

workflows:
  default:
    jobs:
      - test-build
      - upload-docker:
          requires:
            - test-build
          filters:
            branches:
              only: [ master ]
      - deploy-docker:
          filters:
            branches:
              only: [ master ]
          requires:
            - upload-docker

